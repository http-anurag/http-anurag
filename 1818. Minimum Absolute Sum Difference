public class Solution {
    public int minAbsoluteSumDiff(int[] nums1, int[] nums2) {
        int MOD = 1_000_000_007;
        int n = nums1.length;
        int[] sortedNums1 = Arrays.copyOf(nums1, n);
        Arrays.sort(sortedNums1);

        long totalDiff = 0;
        int maxGain = 0;

        for (int i = 0; i < n; i++) {
            int a = nums1[i];
            int b = nums2[i];
            int currentDiff = Math.abs(a - b);
            totalDiff += currentDiff;

            int idx = Arrays.binarySearch(sortedNums1, b);
            if (idx < 0) idx = -(idx + 1);

            if (idx < n) {
                int betterDiff = Math.abs(sortedNums1[idx] - b);
                maxGain = Math.max(maxGain, currentDiff - betterDiff);
            }
            if (idx > 0) {
                int betterDiff = Math.abs(sortedNums1[idx - 1] - b);
                maxGain = Math.max(maxGain, currentDiff - betterDiff);
            }
        }

        return (int)((totalDiff - maxGain) % MOD);
    }
}
